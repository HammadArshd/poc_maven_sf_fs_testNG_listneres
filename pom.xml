<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>proof-of-concept</groupId>
    <artifactId>poc_sf_fs_testNG</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <source.and.target.JVM.version>1.8</source.and.target.JVM.version>
        <surefire.fork.count>2</surefire.fork.count>
        <testNG.suiteXmlFile>${project.basedir}\src\test\resources\testng.xml</testNG.suiteXmlFile>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>testngListenerWithFailsafe</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>

                    <plugin>
                        <groupId>com.github.temyers</groupId>
                        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                        <version>4.2.0</version>
                        <executions>
                            <execution>
                                <id>generateRunners</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generateRunners</goal>
                                </goals>
                                <configuration>
                                    <!-- Mandatory -->
                                    <!-- List of package names to scan for glue code. -->
                                    <glue>
                                        <package>cucumber.poc.stepDefs</package>
                                        <!--<package>com.example.other</package>-->
                                    </glue>
                                    <!-- These are optional, with the default values -->
                                    <!-- Where to output the generated tests -->
                                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber-jvm-parllel-plugin</outputDirectory>
                                    <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                                    <featuresDirectory>src/test/resources/features/</featuresDirectory>
                                    <!-- Directory where the cucumber report files shall be written  -->
                                    <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                                    <!-- List of cucumber plugins. When none are provided the json formatter is used. For more
                                         advanced usage see section about configuring cucumber plugins -->
                                    <plugins>
                                        <plugin>
                                            <name>json</name>
                                        </plugin>
                                        <!--<plugin>-->
                                        <!--<name>com.example.CustomHtmlFormatter</name>-->
                                        <!--<extension>html</extension>-->
                                        <!--</plugin>-->
                                    </plugins>
                                    <!-- CucumberOptions.strict property -->
                                    <strict>true</strict>
                                    <!-- CucumberOptions.monochrome property -->
                                    <monochrome>true</monochrome>
                                    <!-- The tags to run, maps to CucumberOptions.tags property. Default is no tags. -->
                                    <!--<tags>-->
                                    <!--<tag>@billing</tag>-->
                                    <!--<tag>~@billing</tag>-->
                                    <!--<tag>@important</tag>-->
                                    <!--<tag>@important,@billing</tag>-->
                                    <!--</tags>-->
                                    <!-- Generate TestNG runners instead of JUnit ones. -->
                                    <useTestNG>true</useTestNG>
                                    <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
                                    <namingScheme>simple</namingScheme>
                                    <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                                    <namingPattern>Parallel{c}IT</namingPattern>
                                    <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                                    <parallelScheme>FEATURE</parallelScheme>
                                    <!-- Specify a custom template for the generated sources (this is a path relative to the project base directory) -->
                                    <!--<customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>-->
                                    <!-- Specify a custom package name for generated sources. Default is no package.-->
                                    <!--<packageName>com.example</packageName>-->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.7.0</version>
                        <configuration>

                            <encoding>UTF-8</encoding>
                            <fork>true</fork>

                            <source>${source.and.target.JVM.version}</source>
                            <target>${source.and.target.JVM.version}</target>

                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.20.1</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <!--<goal>verify</goal>-->
                                </goals>
                            </execution>
                        </executions>
                        <configuration>

                            <parallel>classes</parallel>

                            <forkCount>3</forkCount>
                            <reuseForks>true</reuseForks>

                            <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>

                            <includes>
                                <include>**/*IT.class</include>
                            </includes>
                            <systemPropertyVariables>
                                <PluginName>Failsafe</PluginName>
                            </systemPropertyVariables>
                            <properties>

                                <property>
                                    <name>surefire.testng.verbose</name>
                                    <value>10</value>
                                </property>

                                <property>
                                    <name>listener</name>
                                    <value>cucumber.poc.config.MyCustomListener</value>
                                </property>
                            </properties>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>


        <profile>
            <id>testngListenerWithSurefire</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.temyers</groupId>
                        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                        <version>4.2.0</version>
                        <executions>
                            <execution>
                                <id>generateRunners</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generateRunners</goal>
                                </goals>
                                <configuration>
                                    <!-- Mandatory -->
                                    <!-- List of package names to scan for glue code. -->
                                    <glue>
                                        <package>cucumber.poc.stepDefs</package>
                                        <!--<package>com.example.other</package>-->
                                    </glue>
                                    <!-- These are optional, with the default values -->
                                    <!-- Where to output the generated tests -->
                                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber-jvm-parllel-plugin</outputDirectory>
                                    <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                                    <featuresDirectory>src/test/resources/features/</featuresDirectory>
                                    <!-- Directory where the cucumber report files shall be written  -->
                                    <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                                    <!-- List of cucumber plugins. When none are provided the json formatter is used. For more
                                         advanced usage see section about configuring cucumber plugins -->
                                    <plugins>
                                        <plugin>
                                            <name>json</name>
                                        </plugin>
                                        <!--<plugin>-->
                                        <!--<name>com.example.CustomHtmlFormatter</name>-->
                                        <!--<extension>html</extension>-->
                                        <!--</plugin>-->
                                    </plugins>
                                    <!-- CucumberOptions.strict property -->
                                    <strict>true</strict>
                                    <!-- CucumberOptions.monochrome property -->
                                    <monochrome>true</monochrome>
                                    <!-- The tags to run, maps to CucumberOptions.tags property. Default is no tags. -->
                                    <!--<tags>-->
                                    <!--<tag>@billing</tag>-->
                                    <!--<tag>~@billing</tag>-->
                                    <!--<tag>@important</tag>-->
                                    <!--<tag>@important,@billing</tag>-->
                                    <!--</tags>-->
                                    <!-- Generate TestNG runners instead of JUnit ones. -->
                                    <useTestNG>true</useTestNG>
                                    <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
                                    <namingScheme>simple</namingScheme>
                                    <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                                    <namingPattern>Parallel{c}IT</namingPattern>
                                    <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                                    <parallelScheme>FEATURE</parallelScheme>
                                    <!-- Specify a custom template for the generated sources (this is a path relative to the project base directory) -->
                                    <!--<customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>-->
                                    <!-- Specify a custom package name for generated sources. Default is no package.-->
                                    <!--<packageName>com.example</packageName>-->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.20.1</version>
                        <configuration>


                            <parallel>classes</parallel>

                            <forkCount>2</forkCount>
                            <reuseForks>true</reuseForks>

                            <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>

                            <includes>
                                <include>**/*IT.class</include>
                            </includes>

                            <systemPropertyVariables>
                                <PluginName>Surefire</PluginName>
                            </systemPropertyVariables>

                            <properties>

                                <property>
                                    <name>surefire.testng.verbose</name>
                                    <value>10</value>
                                </property>

                                <property>
                                    <name>usedefaultlisteners</name>
                                    <!-- disabling default listeners is optional -->
                                    <value>false</value>
                                </property>
                                <property>
                                    <name>listener</name>
                                    <value>cucumber.poc.config.MyCustomListener</value>
                                </property>
                            </properties>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>testngListenerWithSurefireTestNGXML</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.temyers</groupId>
                        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                        <version>4.2.0</version>
                        <executions>
                            <execution>
                                <id>generateRunners</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generateRunners</goal>
                                </goals>
                                <configuration>
                                    <!-- Mandatory -->
                                    <!-- List of package names to scan for glue code. -->
                                    <glue>
                                        <package>cucumber.poc.stepDefs</package>
                                        <!--<package>com.example.other</package>-->
                                    </glue>
                                    <!-- These are optional, with the default values -->
                                    <!-- Where to output the generated tests -->
                                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber-jvm-parllel-plugin</outputDirectory>
                                    <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                                    <featuresDirectory>src/test/resources/features/</featuresDirectory>
                                    <!-- Directory where the cucumber report files shall be written  -->
                                    <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                                    <!-- List of cucumber plugins. When none are provided the json formatter is used. For more
                                         advanced usage see section about configuring cucumber plugins -->
                                    <plugins>
                                        <plugin>
                                            <name>json</name>
                                        </plugin>
                                        <!--<plugin>-->
                                        <!--<name>com.example.CustomHtmlFormatter</name>-->
                                        <!--<extension>html</extension>-->
                                        <!--</plugin>-->
                                    </plugins>
                                    <!-- CucumberOptions.strict property -->
                                    <strict>true</strict>
                                    <!-- CucumberOptions.monochrome property -->
                                    <monochrome>true</monochrome>
                                    <!-- The tags to run, maps to CucumberOptions.tags property. Default is no tags. -->
                                    <!--<tags>-->
                                    <!--<tag>@billing</tag>-->
                                    <!--<tag>~@billing</tag>-->
                                    <!--<tag>@important</tag>-->
                                    <!--<tag>@important,@billing</tag>-->
                                    <!--</tags>-->
                                    <!-- Generate TestNG runners instead of JUnit ones. -->
                                    <useTestNG>true</useTestNG>
                                    <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
                                    <namingScheme>simple</namingScheme>
                                    <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                                    <namingPattern>Parallel{c}IT</namingPattern>
                                    <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                                    <parallelScheme>FEATURE</parallelScheme>
                                    <!-- Specify a custom template for the generated sources (this is a path relative to the project base directory) -->
                                    <!--<customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>-->
                                    <!-- Specify a custom package name for generated sources. Default is no package.-->
                                    <!--<packageName>com.example</packageName>-->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.20.1</version>
                        <configuration>
                            <suiteXmlFiles>
                                <file>${testNG.suiteXmlFile}</file>
                            </suiteXmlFiles>

                            <systemPropertyVariables>
                                <PluginName>SurefireWithXml</PluginName>
                            </systemPropertyVariables>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <dependencies>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.7.1</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>1.2.5</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.2.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-jvm</artifactId>
            <version>1.2.5</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-jvm-deps</artifactId>
            <version>1.0.5</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>gherkin</artifactId>
            <version>2.12.2</version>
        </dependency>


        <!-- Reporting: 1st type is Cucumber Extent advance Reporting -->
        <dependency>
            <groupId>com.vimalselvam</groupId>
            <artifactId>cucumber-extentsreport</artifactId>
            <version>3.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports</artifactId>
            <version>3.1.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- Reporting: 2nd type is Cucumber Reporting -->
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>3.12.0</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!-- Non Categorized -->
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>3.12.0</version>
        </dependency>

        <dependency>
            <groupId>com.vimalselvam</groupId>
            <artifactId>testng-extentsreport</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>



    </dependencies>



</project>